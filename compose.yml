services:
  api:
    build:
      context: .
      dockerfile: docker/${MODE}/Dockerfile
    depends_on:
      sql_proxy:
        # postgres:
        # condition: service_healthy
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - ./:/go/src/polupolu-backend
  sql_proxy:
    image: gcr.io/cloudsql-docker/gce-proxy:latest
    volumes:
      - .invertible-env-448206-n2-fc9a63d429f6.json:/config.json
    ports:
      - "3306:3306"
    restart: always
    command: /cloud_sql_proxy -instances=invertible-env-448206-n2:asia-northeast1:my-polupolu-postgres=tcp:0.0.0.0:3306 -credential_file=/config.json
  postgres:
    container_name: postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      interval: 30s
      retries: 6
      start_period: 30s
      test:
        [
          "CMD-SHELL",
          "pg_isready",
          "-U",
          "${DB_USER}",
          "-h",
          "${DB_HOST}",
          "-d",
          "${DB_NAME}",
        ]
      timeout: 5s
    image: postgres:16.3
    platform: linux/x86_64
    ports:
      - "${DB_PORT}:5432"
    restart: always
    volumes:
      - db-store:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
volumes:
  db-store:
